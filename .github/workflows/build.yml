name: Build

on:
  workflow_dispatch: 
    inputs:
      publish:
        description: 'Publish release to GitHub'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install

    - name: Build Windows
      run: npm run electron:build:win

    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4.6.2
      with:
        name: drawnix-windows-installer
        path: dist/electron/*-Setup.exe

    - name: Upload Windows Portable
      uses: actions/upload-artifact@v4.6.2
      with:
        name: drawnix-windows-portable
        path: dist/electron/*-Portable.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install

    - name: Build macOS
      run: npm run electron:build:mac

    - name: Upload macOS DMG (x64)
      uses: actions/upload-artifact@v4
      with:
        name: drawnix-macos-installer-x64
        path: dist/electron/*-x64.dmg
    
    - name: Upload macOS DMG (arm64)
      uses: actions/upload-artifact@v4
      with:
        name: drawnix-macos-installer-arm64
        path: dist/electron/*-arm64.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install

    - name: Build Linux
      run: npm run electron:build:linux

    - name: Upload Linux DEB
      uses: actions/upload-artifact@v4
      with:
        name: drawnix-linux-deb
        path: dist/electron/*.deb

    - name: Upload Linux AppImage
      uses: actions/upload-artifact@v4
      with:
        name: drawnix-linux-appimage
        path: dist/electron/*.AppImage


  publish:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.publish == 'true' }}
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: true
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}